variables:
  VERSION: "$CI_PIPELINE_ID"
  ASPNETCORE_ENVIRONMENT: "Production"

stages:
  - build
  - test
  - deploy

.build_tags:
  tags:
    - "docker"

.deploy_tags:
  tags:
    - "shell"
    
.prepare_ssh:
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "kinhnv1801@gmail.com"
    - git config --global user.name "Nguyen Van Kinh"
    - 'which ~/yq || (wget -qO ~/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x ~/yq)'

build_user-service:
  stage: build
  extends:
    - .build_tags
  only:
    - master
  image:
    name: $REGISTRY/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  before_script:
    - sed -i "s/pre-build-params_registry/$REGISTRY/g" ./**/Dockerfile
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/TestMaker.UserService.Api/Dockerfile"
      --destination "$REGISTRY/test-maker.user-service:${VERSION}"
      --skip-tls-verify
      --cache=true
      --cache-copy-layers=true
      --snapshotMode=redo
      --use-new-run

build_identity-server:
  stage: build
  extends:
    - .build_tags
  only:
    - master
  image:
    name: $REGISTRY/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  before_script:
    - sed -i "s/pre-build-params_registry/$REGISTRY/g" ./**/Dockerfile
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/TestMaker.UserService.IdentityServer/Dockerfile"
      --destination "$REGISTRY/test-maker.identity-server:${VERSION}"
      --skip-tls-verify
      --cache=true
      --cache-copy-layers=true
      --snapshotMode=redo
      --use-new-run

test:
  stage: test
  extends:
    - .build_tags
  only:
    - master
  needs: 
    - build_user-service
    - build_identity-server
  script:
    - echo "test"
    # - docker build -t test-business:latest -f TestMaker.TestService.UnitTests/Dockerfile .
    # - docker run --rm -t test-business:latest dotnet test --logger:"console;verbosity=normal"
    # - docker image rm test-business:latest
        
deploy:
  stage: deploy
  extends:
    - .deploy_tags
    - .prepare_ssh
  only:
    - master
  needs: [test]
  script:
    - git clone $GITOPS_URL 
    - cd gitops
    - ~/yq eval ".services.userService.tag = \"${VERSION}\"" -i ./test-maker/values.yaml
    - ~/yq eval ".servers.identityServer.tag = \"${VERSION}\"" -i ./test-maker/values.yaml
    - git add ./test-maker/values.yaml
    - git commit -m "change to version $VERSION"
    - git push
